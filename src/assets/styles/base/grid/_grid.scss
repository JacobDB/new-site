// Styles written by __gulp_init_author_name__ @ __gulp_init_author_company__

/* ------------------------------------------------------------------------ *\
 * Grid (based loosely on https://v4-alpha.getbootstrap.com/layout/grid/)
\* ------------------------------------------------------------------------ */

.row {
    & {
        display: flex;
        flex-wrap: wrap;
    }

    & > [class*="col-"] {
        flex-grow: 1;
        flex-shrink: 1;
        min-width: 0;
    }

    & > [class*="col-"].col--grow-0 {
        flex-grow: 0;
    }

    & > [class*="col-"].col--shrink-0 {
        flex-shrink: 0;
    }
}

.row--display-grid {
    & {
        display: grid;
        grid-template-columns: repeat(12, 1fr);
    }

    &.row--equal {
        grid-auto-columns: 1fr;
        grid-auto-rows: 1fr;
    }
}

.row--padded {
    & {
        width: calc(100% + #{remify($column-gap, 16)});
    }

    > [class*="col-"] {
        padding-right: remify($column-gap, 16);
    }
}

.row--padded-tight {
    & {
        width: calc(100% + #{remify($column-gap * 0.75, 16)});
    }

    > [class*="col-"] {
        padding-right: remify($column-gap * 0.75, 16);
    }
}

.row--padded-loose {
    & {
        width: calc(100% + #{remify($column-gap * 1.25, 16)});
    }

    > [class*="col-"] {
        padding-right: remify($column-gap * 1.25, 16);
    }
}

.row--wrap-no {
    & {
        flex-wrap: nowrap;
    }
}

.row--wrap-reverse {
    & {
        flex-wrap: wrap-reverse;
    }
}

.row--center {
    & {
        align-items: center;
        justify-content: center;
    }
}

.row--align-start {
    & {
        align-items: flex-start;
    }
}

.row--align-center {
    & {
        align-items: center;
    }
}

.row--align-end {
    & {
        align-items: flex-end;
    }
}

.row--align-stretch {
    & {
        align-items: stretch;
    }
}

.row--justify-start {
    & {
        justify-content: flex-start;
    }
}

.row--justify-center {
    & {
        justify-content: center;
    }
}

.row--justify-end {
    & {
        justify-content: flex-end;
    }
}

.row--justify-around {
    & {
        justify-content: space-around;
    }
}

.row--justify-between {
    & {
        justify-content: space-between;
    }
}

.row--direction-column {
    & {
        flex-direction: column;
    }
}

.row--direction-reverse {
    &:not(.row--direction-column) {
        flex-direction: row-reverse;
    }

    &.row--direction-column {
        flex-direction: column-reverse;
    }
}

.col-auto {
    & {
        flex-basis: auto;
    }
}

@for $i from 0 through $column-count {
    .col-#{$i} {
        flex-basis: ($i / $column-count) * 100%;
        grid-column: span $i;
    }
}

@each $name, $size in $breakpoints {
    @include larger-than($name) {
        .col-#{$name}-auto {
            & {
                flex-basis: auto;
            }
        }

        @for $i from 0 through $column-count {
            .col-#{$name}-#{$i} {
                flex-basis: ($i / $column-count) * 100%;
                grid-column: span $i;
            }
        }
    }
}
