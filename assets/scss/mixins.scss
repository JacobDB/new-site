// Styles written by Jacob Bearce | jacob@bearce.me

@import "media-queries";

@mixin clear {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
    *zoom: 1;
}

@mixin flex-fix {
    .flexbox & {
        float: none;
    }
}

@mixin font-size($size: 24, $base: 16, $unit: rem) {
    font-size: $size + px;
    font-size: ($size / $base) + $unit;
}

@mixin line-height($line-height, $base: 16, $unit: rem) {
    line-height: $line-height + px;
    line-height: ($line-height / $base) + $unit;
}

@mixin margin($top: 0, $right: 0, $bottom: 0, $left: 0, $base: 16, $unit: rem) {
    margin: {
        bottom: $bottom + px;
        left: $left + px;
        right: $right + px;
        top: $top + px;
    }
    margin: {
        bottom: ($bottom / $base) + $unit;
        left: ($left / $base) + $unit;
        right: ($right / $base) + $unit;
        top: ($top / $base) + $unit;
    }
}

@mixin padding($top: 0, $right: 0, $bottom: 0, $left: 0, $base: 16, $unit: rem) {
    padding: {
        bottom: $bottom + px;
        left: $left + px;
        right: $right + px;
        top: $top + px;
    }
    padding: {
        bottom: ($bottom / $base) + $unit;
        left: ($left / $base) + $unit;
        right: ($right / $base) + $unit;
        top: ($top / $base) + $unit;
    }
}

@mixin position($position, $args) {
    @each $o in top right bottom left {
        $i: index($args, $o);
        @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
            #{$o}: nth($args, $i + 1);
        }
    }
    position: $position;
}

@mixin absolute($args) {
    @include position("absolute", $args);
}

@mixin fixed($args) {
    @include position("fixed", $args);
}

@mixin relative($args) {
    @include position("relative", $args);
}

@mixin placeholder {
    ::-webkit-input-placeholder {@content}
    :-moz-placeholder {@content}
    ::-moz-placeholder {@content}
    :-ms-input-placeholder {@content}
    .placeholder {@content}
}
